{"version":3,"sources":["components/card.jsx","components/cardList.jsx","components/searchBox.jsx","components/scroll.jsx","components/errorBoundary.jsx","contaners/app.jsx","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","SearchBox","props","type","placeholder","onChange","searchChange","Scroll","style","overflow","border","height","children","ErrorBoundary","state","error","info","this","setState","hasError","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","searchfield","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAYeA,MAZf,YAAkC,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MACrB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,mBACpD,gCACI,6BAAKJ,IACL,4BAAIC,WCMLI,MAVf,YAEI,OAFuB,EAARC,OAGJC,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,CAAoBT,GAAIS,EAAKT,GAAIC,KAAMQ,EAAKR,KAAMC,MAAOO,EAAKP,OAAnDO,EAAKT,QCGpBU,MATf,SAAmBC,GACf,OACI,qBAAKR,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAChBS,KAAK,SAASX,KAAK,YAAYY,YAAY,gBAAiBC,SAAUH,EAAMI,kBCI1EC,MARf,SAAgBL,GACZ,OACI,qBAAKM,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKT,EAAMU,YCgBJC,E,kDAfX,WAAYX,GAAO,IAAD,8BACd,cAAMA,IACDY,MAAQ,CAAC,UAAY,GAFZ,E,qDAKlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAC,UAAY,M,oBAE/B,WACI,OAAID,KAAKH,MAAMK,SACJ,oEAEJF,KAAKf,MAAMU,a,GAdEQ,aC+CbC,E,kDAxCZ,aAAc,IAAD,8BACT,gBAOHC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAC,YAAeK,EAAMC,OAAOC,SAP5C,EAAKX,MAAQ,CACT,OAAU,GACV,YAAe,IAJV,E,qDAYb,WAAoB,IAAD,OACfY,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAG,EAAKZ,SAAS,CAAC,OAAUY,S,oBAG3C,WAAS,IAAD,OACEC,EAAed,KAAKH,MAAMhB,OAAOkC,QAAO,SAACC,GAC3C,OAAOA,EAAMzC,KAAK0C,cAAcC,SAAS,EAAKrB,MAAMsB,gBAGxD,OACI,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,gBAAd,oBACA,cAAC,EAAD,CAAWY,aAAcW,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQiC,e,GA/BxBX,aCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.56f26565.chunk.js","sourcesContent":["function Card({id, name, email}) {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robot profiles\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './card';\r\n\r\nfunction CardList({robots}){\r\n    \r\n    return(\r\n        robots.map((user)=>{\r\n            return <Card key={user.id} id={user.id} name={user.name} email={user.email}/>\r\n        })\r\n        \r\n    );\r\n}\r\n\r\nexport default CardList;","function SearchBox(props){\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\"\r\n             type=\"search\" name=\"searchBox\" placeholder=\"search robots\"  onChange={props.searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","function Scroll(props){\r\n    return (\r\n        <div style={{overflow: \"scroll\", border: \"5px solid black\", height: \"800px\"}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\"hasError\": false};\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({\"hasError\": true});\r\n    }\r\n    render(){\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops sorry somthing went wrong...</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundary;","import CardList from '../components/cardList';\r\nimport SearchBox from '../components/searchBox';\r\nimport { Component } from 'react';\r\nimport Scroll from '../components/scroll';\r\nimport ErrorBoundary from '../components/errorBoundary';\r\n\r\n\r\nclass App extends Component{\r\n   \r\n   constructor(){\r\n       super();\r\n       this.state = {\r\n           \"robots\": [],\r\n           \"searchfield\": \"\"\r\n       }\r\n   }\r\n\r\n    onSearchChange = (event)=>{\r\n        this.setState({\"searchfield\": event.target.value});\r\n   };\r\n\r\n   componentDidMount(){ \r\n       fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response=>response.json())\r\n        .then(users=> this.setState({\"robots\": users}));\r\n   }\r\n   \r\n    render(){\r\n        const filterRobots = this.state.robots.filter((robot)=>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield);\r\n        });\r\n\r\n        return (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f-subheadline\">Roboto</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filterRobots}/>\r\n                    </ErrorBoundary>\r\n                    \r\n                </Scroll>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './contaners/app';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}